name: Build Core

on: [push]

jobs:
  HTML-Frontend:
    name: 'HTML Frontend'
    
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: www/html_frontend
    
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          submodules: true
        
      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
          
      - name: Install Node dependencies
        run: npm install
        
      - name: Build the frontend
        run: npm run build
        
      - name: Upload build
        uses: actions/upload-artifact@v2.2.3
        with:
          name: www/html_frontend
          # A file, directory or wildcard pattern that describes what to upload
          path: www/html_frontend/dist
      
  Linux:  
    runs-on: ubuntu-20.04
    
    needs: HTML-Frontend
      
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          submodules: true
          
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      
      - name: Download frontend
        uses: actions/download-artifact@v2
        with:
          name: www/html_frontend
          path: www/html_frontend/dist/
            
        
      - name: Install system dependencies
        run: sudo apt install build-essential

      - name: Install golang
        uses: actions/setup-go@v3
        with:
          go-version: '1.19' # The Go version to download (if necessary) and use.
        
      - name: Build golang executable
        run: |
          go install github.com/swaggo/swag/cmd/swag
          ./scripts/build.sh

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6 # Not needed with a .ruby-version file

      - name: Copy Dependencies
        working-directory: build
        run: ../scripts/copy_lib_linux.rb ./

      - name: Set permissions
        run: chmod +x build/*

      - name: Run tests
        working-directory: build
        run: ../scripts/test.sh

      - name: Upload code coverage
        working-directory: build
        run: bash <(curl -s https://codecov.io/bash)

      - name: Remove coverage
        run: rm build/coverage.txt
  
      - name: Upload build
        uses: actions/upload-artifact@v2.2.3
        with:
          name: Linux
          # A file, directory or wildcard pattern that describes what to upload
          path: build

  Windows:  
    runs-on: windows-latest
    
    needs: HTML-Frontend
      
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          submodules: true
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
        
      - name: Download frontend
        uses: actions/download-artifact@v2
        with:
          name: www/html_frontend
          path: www/html_frontend/dist/
          
      - name: Create build directories
        run: mkdir build
        
      - name: Launch compiler
        shell: cmd
        run: |
          call "C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          call cl.exe /EHsc tools/PythonInterpreter.cpp /I${{ env.pythonLocation }}\include python39.lib /link /LIBPATH:${{ env.pythonLocation}}\libs /out:build\pythoninterpreter.exe

      - name: Download and extract Python
        run: |
          Invoke-WebRequest -Uri "https://www.python.org/ftp/python/3.9.6/python-3.9.6-embed-amd64.zip" -OutFile python-embedded.zip
          Expand-Archive -LiteralPath python-embedded.zip -DestinationPath build
          rm python-embedded.zip

      - name: Install golang
        uses: actions/setup-go@v3
        with:
          go-version: '1.19' # The Go version to download (if necessary) and use.

      - name: Run swaggo
        run: |
          go install github.com/swaggo/swag/cmd/swag
          swag init -o api -g cmd/proximitycore/main.go --parseInternal

      - name: Build
        run: go build -o build/proximitycore.exe cmd/proximitycore/main.go

      - name: Upload build
        uses: actions/upload-artifact@v2.2.3
        with:
          name: Windows
          # A file, directory or wildcard pattern that describes what to upload
          path: build

  MacOS:
    runs-on: macos-12
    
    needs: HTML-Frontend
      
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          submodules: true
          
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.6
      
      - name: Download frontend
        uses: actions/download-artifact@v2
        with:
          name: www/html_frontend
          path: www/html_frontend/dist/
      
      - name: Install golang
        uses: actions/setup-go@v3
        with:
          go-version: '1.19' # The Go version to download (if necessary) and use.
        
      - name: Build golang executable
        run: |
          go install github.com/swaggo/swag/cmd/swag
          ./scripts/build.sh

      - name: Set permissions
        run: chmod +x build/*

      - name: Run tests
        working-directory: build
        run: ../scripts/test.sh

      - name: Remove coverage
        run: rm build/coverage.txt
  
      - name: Upload build
        uses: actions/upload-artifact@v2.2.3
        with:
          name: MacOS
          # A file, directory or wildcard pattern that describes what to upload
          path: build
