definitions:
  project.DataPacket:
    properties:
      data:
        items:
          type: integer
        type: array
      direction:
        type: string
      displayData:
        type: string
      endOffset:
        type: integer
      guid:
        type: string
      id:
        type: integer
      modified:
        type: boolean
      requestID:
        type: integer
      startOffset:
        type: integer
      time:
        type: integer
    type: object
  project.InjectOperation:
    properties:
      archived:
        type: boolean
      customFilenames:
        items:
          type: string
        type: array
      customPayloads:
        items:
          type: string
        type: array
      doNotRecord:
        type: boolean
      error:
        type: string
      fuzzDB:
        items:
          type: string
        type: array
      guid:
        type: string
      host:
        type: string
      injectDescription:
        type: string
      iterateFrom:
        type: integer
      iterateTo:
        type: integer
      objectType:
        type: string
      percentCompleted:
        description: Parts of the object which cannot be set by JSON
        type: integer
      request:
        items:
          $ref: '#/definitions/project.InjectOperationRequestPart'
        type: array
      requestsMadeCount:
        type: integer
      ssl:
        type: boolean
      title:
        type: string
      totalRequestCount:
        type: integer
      url:
        type: string
    type: object
  project.InjectOperationRequestPart:
    properties:
      inject:
        type: boolean
      requestPart:
        type: string
    type: object
  project.InterceptedRequest:
    properties:
      body:
        example: <base64 encoded body>
        type: string
      direction:
        example: Either browser_to_server or server_to_browser
        type: string
      guid:
        type: string
      objectType:
        type: string
      recordAction:
        example: Either add or delete
        type: string
      request:
        $ref: '#/definitions/project.Request'
    type: object
  project.PartialRequestResponseData:
    properties:
      data:
        type: string
      from:
        type: integer
      to:
        type: integer
    type: object
  project.Request:
    properties:
      error:
        type: string
      guid:
        type: string
      hash:
        type: string
      notes:
        type: string
      objectType:
        type: string
      payloads:
        type: string
      protocol:
        type: string
      requestSize:
        type: integer
      responseContentLength:
        type: integer
      responseContentType:
        type: string
      responseSize:
        type: integer
      responseStatusCode:
        type: integer
      responseTime:
        type: integer
      scanID:
        type: string
      time:
        type: integer
      url:
        type: string
      verb:
        type: string
    type: object
  project.RequestDifference:
    properties:
      request:
        description: 1 for request number one, 2 for request number two, 0 for both
        type: integer
      text:
        type: string
    type: object
  project.RequestResponseContents:
    properties:
      combinedContentLength:
        type: integer
      dataPackets:
        items:
          $ref: '#/definitions/project.DataPacket'
        type: array
      largeResponse:
        type: boolean
      mimeType:
        type: string
      modified:
        type: boolean
      modifiedRequest:
        type: string
      modifiedResponse:
        type: string
      protocol:
        type: string
      request:
        type: string
      response:
        type: string
      url:
        type: string
    type: object
  project.RequestSearchResult:
    properties:
      endOffset:
        type: integer
      startOffset:
        type: integer
    type: object
  project.RequestSummary:
    properties:
      guid:
        type: string
      headers:
        additionalProperties:
          type: string
        type: object
      hostname:
        type: string
      protocol:
        type: string
      requestData:
        type: string
      siteMapPath:
        type: string
      splitRequest:
        items:
          $ref: '#/definitions/project.InjectOperationRequestPart'
        type: array
      url:
        type: string
    type: object
  project.ScriptGroup:
    properties:
      expanded:
        type: boolean
      guid:
        type: string
      objectType:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  project.ScriptProgressUpdate:
    properties:
      count:
        type: integer
      guid:
        type: string
      objectType:
        type: string
      total:
        type: integer
    type: object
  project.ScriptRun:
    properties:
      development:
        type: boolean
      doNotRecord:
        type: boolean
      error:
        type: string
      guid:
        type: string
      htmlOutput:
        type: string
      objectType:
        type: string
      percentCompleted:
        type: integer
      requestsMadeCount:
        type: integer
      scriptGroup:
        type: string
      status:
        type: string
      textOutput:
        type: string
      title:
        type: string
      totalRequestCount:
        type: integer
    type: object
  proxy.AddRequestToQueueParameters:
    properties:
      host:
        type: string
      payloads:
        type: string
      request:
        example: <base64 encoded request>
        type: string
      scan_id:
        type: string
      ssl:
        type: boolean
    type: object
  proxy.InterceptSettings:
    properties:
      browserToServer:
        type: boolean
      serverToBrowser:
        type: boolean
    type: object
  proxy.InterceptedRequestResponse:
    properties:
      body:
        example: <base64 encoded body>
        type: string
      dataPacketGUID:
        type: string
      direction:
        example: Either browser_to_server or server_to_browser
        type: string
      id:
        type: integer
      requestAction:
        example: 'One of: forward, forward_and_intercept_response or drop'
        type: string
      requestGUID:
        type: string
    type: object
  proxy.MakeRequestParameters:
    properties:
      client_cert:
        type: string
      client_cert_key:
        type: string
      host:
        type: string
      request:
        example: <base64 encoded request>
        type: string
      scan_id:
        type: string
      ssl:
        type: boolean
    type: object
  proxy.PayloadEntry:
    properties:
      filename:
        type: string
      isDirectory:
        type: boolean
      resourcePath:
        type: string
      samplePayloads:
        items:
          type: string
        type: array
      subEntries:
        items:
          $ref: '#/definitions/proxy.PayloadEntry'
        type: array
      title:
        type: string
    type: object
  proxy.ProxySettings:
    properties:
      http11ProxyAddr:
        type: string
      http11ProxyListening:
        type: boolean
      http11UpstreamProxyAddr:
        type: string
      maxConnectionsPerHost:
        type: integer
      openFile:
        description: cannot be set externally
        type: string
      openProcessPID:
        description: cannot be set externally
        type: integer
      openTempFile:
        description: cannot be set externally
        type: string
    type: object
  scripting.RunScriptParameters:
    properties:
      code:
        items:
          $ref: '#/definitions/scripting.ScriptCode'
        type: array
      development:
        type: boolean
      scriptGroup:
        type: string
      title:
        type: string
    type: object
  scripting.ScriptCode:
    properties:
      code:
        type: string
      filename:
        type: string
      mainScript:
        type: boolean
    type: object
host: localhost
info:
  contact:
    email: support@forensant.com
    name: API Support
    url: https://forensant.com/support
  description: This provides the common functions which are relied upon by the Proximity
    frontends.
  license:
    name: Commercial
    url: https://proximity.forensant.com/terms
  termsOfService: https://forensant.com/terms/
  title: Proximity Core
  version: "1.0"
paths:
  /inject_operation/run:
    post:
      consumes:
      - application/json
      description: creates and runs an injection operation
      parameters:
      - description: Injection details in JSON format (not all fields can be set)
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/project.InjectOperation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Run an Injection Operation
      tags:
      - Injection Operations
  /inject_operations:
    get:
      description: gets a list of all injection operations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/project.InjectOperation'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get All Inject Operations
      tags:
      - Injection Operations
  /inject_operations/{guid}/archive:
    patch:
      description: updates the the archived status of an inject operation
      parameters:
      - description: inject operation guid
        in: path
        name: guid
        required: true
        type: string
      - description: archive status to set
        in: formData
        name: archive
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Archive Inject Operation
      tags:
      - Injection Operations
  /inject_operations/{guid}/title:
    patch:
      description: updates the title of an inject operation
      parameters:
      - description: inject operation guid
        in: path
        name: guid
        required: true
        type: string
      - description: title to set
        in: formData
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Set Inject Operation Title
      tags:
      - Injection Operations
  /inject_operations/{path}:
    get:
      description: gets a single inject operation
      parameters:
      - description: The GUID of the request to fetch
        in: path
        name: guid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.InjectOperation'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Inject Operation
      tags:
      - Injection Operations
  /inject_operations/fuzzdb_payload:
    get:
      description: gets a specific fuzzdb file
      parameters:
      - description: The file path of the fuzzdb file to fetch the payload for
        in: query
        name: file
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get a fuzzdb file
      tags:
      - Injection Operations
  /inject_operations/payloads:
    get:
      description: gets all available payloads available for injection
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxy.PayloadEntry'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Gets injection payloads
      tags:
      - Injection Operations
  /notifications:
    get:
      description: websocket endpoint to stream data as it is inserted/modified
      parameters:
      - description: JSON object (key:value) where the returned objects will be filtered
          by the values
        in: query
        name: objectfieldfilter
        type: string
      - description: additional filter to apply to the objects (behaviour is object
          dependent)
        in: query
        name: filter
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Stream updates
      tags:
      - Misc
  /out_of_band/url:
    get:
      description: gets a unique URL which can be used to test out of band interactions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Out of Band URL
      tags:
      - Out of Band
  /ping:
    get:
      description: returns a simple request to indicate that the service is up
      responses:
        "200":
          description: OK
      security:
      - ApiKeyAuth: []
      summary: Healthcheck
      tags:
      - Misc
  /proxy/ca_certificate.pem:
    get:
      description: returns the certificate authority root certificate
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Gets the root CA
      tags:
      - Proxy
  /proxy/intercept_settings:
    get:
      description: get intercept settings
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxy.InterceptSettings'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Intercept Settings
      tags:
      - Settings
    put:
      description: set intercept settings
      parameters:
      - description: Proxy Intercept Settings Object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/proxy.InterceptSettings'
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Set Intercept Settings
      tags:
      - Settings
  /proxy/intercepted_requests:
    get:
      description: gets a list of all requests which have been intercepted, which
        are awaiting a response
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/project.InterceptedRequest'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Intercept Requests
      tags:
      - Proxy
  /proxy/set_intercepted_response:
    put:
      description: set how an intercepted request will be responded to
      parameters:
      - description: Proxy Intercept Response Object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/proxy.InterceptedRequestResponse'
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Modify Intercepted Request
      tags:
      - Proxy
  /proxy/settings:
    get:
      description: get proxy settings
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/proxy.ProxySettings'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Proxy Settings
      tags:
      - Settings
    put:
      description: set proxy settings
      parameters:
      - description: Proxy Settings Object
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/proxy.ProxySettings'
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Set Proxy Settings
      tags:
      - Settings
  /requests:
    get:
      description: gets a list of all requests
      parameters:
      - description: Scan ID, can be multiple separated by semi-colons
        in: query
        name: scanid
        type: string
      - description: Only show requests which contain the filter string in the url,
          request, response, etc
        in: query
        name: filter
        type: string
      - description: Only show requests which contain the given string in the URL
        in: query
        name: url_filter
        type: string
      - description: Filter by specific verbs
        in: query
        name: verb
        type: string
      - description: Column to sort by (default time)
        in: query
        name: sort_col
        type: string
      - description: Column direction to sort by (default asc)
        in: query
        name: sort_dir
        type: string
      - description: Limit to the last n requests (sorted by time)
        in: query
        name: last
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/project.Request'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get All Requests
      tags:
      - Requests
  /requests/{base_guid}/compare/{compare_guid}:
    get:
      description: compares two requests and returns the differences
      parameters:
      - description: Base Request guid
        in: path
        name: base_guid
        required: true
        type: string
      - description: Request to Compare guid
        in: path
        name: compare_guid
        required: true
        type: string
      produces:
      - text/text
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/project.RequestDifference'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Compare Two Requests
      tags:
      - Requests
  /requests/{guid}:
    get:
      description: gets a specific request
      parameters:
      - description: The GUID of the request to fetch
        in: path
        name: guid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.RequestSummary'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get A Request
      tags:
      - Requests
  /requests/{guid}/contents:
    get:
      description: gets the full request and response of a given request
      parameters:
      - description: Request GUID
        in: path
        name: guid
        required: true
        type: string
      produces:
      - text/text
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.RequestResponseContents'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Request and Response
      tags:
      - Requests
  /requests/{guid}/notes:
    patch:
      description: updates a specific request's notes
      parameters:
      - description: The GUID of the request to update
        in: path
        name: guid
        required: true
        type: string
      - description: The notes for the request
        in: body
        name: notes
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update Request Notes
      tags:
      - Requests
  /requests/{guid}/partial_data:
    get:
      description: gets part of the request/response. will attempt to return at least
        5MB of data to cache
      parameters:
      - description: Request guid
        in: path
        name: guid
        required: true
        type: string
      - description: Offset to request from
        in: query
        name: from
        required: true
        type: integer
      produces:
      - text/text
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.PartialRequestResponseData'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Request/Response Data
      tags:
      - Requests
  /requests/{guid}/payloads:
    patch:
      description: sets the payloads associated with a specific request
      parameters:
      - description: The GUID of the request to update
        in: path
        name: guid
        required: true
        type: string
      - description: A JSON Object containing the payloads in {'key':'value'} format
        in: body
        name: payloads
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Set Request Payloads
      tags:
      - Requests
  /requests/{guid}/search:
    get:
      parameters:
      - description: Request guid
        in: path
        name: guid
        required: true
        type: string
      - description: Base64 encoded bytes to search for
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/project.RequestSearchResult'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Search Request/Response Data
      tags:
      - Requests
  /requests/make:
    post:
      consumes:
      - application/json
      description: makes a single request to a given server
      parameters:
      - description: Make Request Parameters in JSON format
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/proxy.MakeRequestParameters'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Make a single request
      tags:
      - Requests
  /requests/queue:
    post:
      description: add a request to the queue for scanning sites
      parameters:
      - description: Request Details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/proxy.AddRequestToQueueParameters'
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Add Request to Queue
      tags:
      - Requests
  /requests/sitemap:
    get:
      description: gets a list of all paths observed by the proxy
      parameters:
      - description: An optional filter on the query to restrict to specific paths
        in: query
        name: parent
        required: true
        type: string
      - description: An optional filter on the query to restrict to the paths to those
          seen for a particular scan
        in: query
        name: scan_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Gets the sitemap
      tags:
      - Requests
  /script_groups:
    get:
      description: gets a list of all script groups
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/project.ScriptGroup'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get All Script Groups
      tags:
      - Scripting
    post:
      description: adds or updates a script group
      parameters:
      - description: Script Group details in JSON format
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/project.ScriptGroup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Add/Update Script Group
      tags:
      - Scripting
  /script_groups/{guid}:
    get:
      description: gets a specific script group
      parameters:
      - description: Script group guid
        in: path
        name: guid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/project.ScriptGroup'
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Script Group
      tags:
      - Scripting
  /script_groups/{guid}/archive:
    patch:
      description: updates the archived status of a script group
      parameters:
      - description: script group guid
        in: path
        name: guid
        required: true
        type: string
      - description: archive status to set
        in: formData
        name: archive
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Archive Script Group
      tags:
      - Scripting
  /script_groups/{guid}/expanded:
    patch:
      description: updates whether a script group is expanded (used for the UI)
      parameters:
      - description: script group guid
        in: path
        name: guid
        required: true
        type: string
      - description: expanded state
        in: formData
        name: expanded
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Set Script Group Expanded Status
      tags:
      - Scripting
  /script_groups/{guid}/title:
    patch:
      description: updates the title of a script group
      parameters:
      - description: script group guid
        in: path
        name: guid
        required: true
        type: string
      - description: title to set
        in: formData
        name: title
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Set Script Group Title
      tags:
      - Scripting
  /scripts:
    get:
      description: gets a list of all scripts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/project.ScriptRun'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get All Scripts
      tags:
      - Scripting
  /scripts/{guid}:
    get:
      description: gets a single script
      parameters:
      - description: The GUID of the script to fetch
        in: path
        name: guid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get A Script
      tags:
      - Scripting
  /scripts/{guid}/append_html_output:
    post:
      description: appends the given HTML to the HTML output of the script
      parameters:
      - description: The GUID of the script to fetch
        in: path
        name: guid
        required: true
        type: string
      - description: HTML Output to append
        in: body
        name: html
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Append HTML Output for a Script
      tags:
      - Scripting
  /scripts/{guid}/archive:
    patch:
      description: updates the the archived status of a script
      parameters:
      - description: script guid
        in: path
        name: guid
        required: true
        type: string
      - description: archive status to set
        in: formData
        name: archive
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Archive Script
      tags:
      - Scripting
  /scripts/{guid}/cancel:
    patch:
      description: cancels the provided script
      parameters:
      - description: Script to cancel
        in: path
        name: guid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Cancel the running script
      tags:
      - Scripting
  /scripts/{guid}/update_progress:
    post:
      description: updates the progress of a currently running script
      parameters:
      - description: Script to update
        in: path
        name: guid
        required: true
        type: string
      - description: Update Details
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/project.ScriptProgressUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Updates running script progress
      tags:
      - Scripting
  /scripts/run:
    post:
      description: runs the provided script
      parameters:
      - description: Run Script Parameters in JSON format
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/scripting.RunScriptParameters'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Run provided script
      tags:
      - Scripting
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: X-API-Key
    type: apiKey
swagger: "2.0"
